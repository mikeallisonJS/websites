rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function hasPurchased(userId, productId) {
    	let user = get(/databases/$(database)/documents/users/$(userId));
      let products = user.data.products;
      return products != null && products.hasAny([productId, 'ultimate-ableton-templates']);
    }
    function isFree(productId) {
    	let product = get(/databases/$(database)/documents/products/$(productId));
    	return product.data.free != null && product.data.free == true;
    }
    match /users/{uid} {
    	allow read: if request.auth != null && request.auth.uid == uid;
      allow update: if false;
      allow create: if request.auth.uid == uid;
    }
    match /links/{linkId} {
    	allow read: if true;
    }
    match /downloads/{productId} {
    	allow read: if isFree(productId) || hasPurchased(request.auth.uid, productId)
    }
    match /products/{productId} {
    	allow read: if true;
    }
    match /{document=**} {
      allow write: if false;
    }
  }
}