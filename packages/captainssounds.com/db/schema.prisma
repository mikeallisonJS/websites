generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Category {
  id           String    @id
  name         String
  order        Int       @unique
  inNavigation Boolean   @default(true)
  products     Product[]
  Link         Link[]
}

model Product {
  id           String    @id
  name         String
  description  String?
  free         Boolean   @default(false)
  donationware Boolean   @default(false)
  stripeId     String?
  price        Decimal   @default(0)
  order        Int       @default(0)
  createdAt    DateTime  @default(now())
  downloadId   String?
  categoryId   String
  images       Image[]
  orders       Order[]
  download     Download?
  category     Category  @relation(fields: [categoryId], references: [id])
  blocks       Block[]
}

model Order {
  id       String    @id @default(uuid())
  email    String
  products Product[]

  @@index([email])
}

model Image {
  id        String   @id @default(uuid())
  order     Int      @default(0)
  url       String
  productId String?
  product   Product? @relation(fields: [productId], references: [id])

  @@unique([productId, order])
}

model Download {
  id        String  @id
  url       String
  productId String  @unique
  product   Product @relation(fields: [productId], references: [id])
}

model Link {
  id          String   @id
  name        String
  description String?
  category    Category @relation(fields: [categoryId], references: [id])
  order       Int      @default(0)
  url         String
  categoryId  String
}

enum BlockType {
  Text
  Image
  List
  Youtube
}

model Block {
  id        String    @id @default(uuid())
  value     String
  type      BlockType
  className String    @default("")
  order     Int
  productId String
  product   Product   @relation(fields: [productId], references: [id])

  @@unique([productId, order])
}
